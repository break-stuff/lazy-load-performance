let components={"sl-button":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.12.0/cdn/components/button/button.js"},"sl-select":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/components/select/select.js"},"sl-option":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/components/option/option.js"},"sl-input":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/components/input/input.js"},"sl-tab":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/components/tab/tab.js"},"sl-tab-panel":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/components/tab-panel/tab-panel.js"},"sl-tab-group":{importPath:"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.13.1/cdn/components/tab-group/tab-group.js"}};const eagerLoad=["sl-button"];let observer;export function updateConfig(e){e.components&&(components={...components,...e.components}),e.rootElement&&(observer.disconnect(),start(e.rootElement)),e.eagerLoad&&e.eagerLoad.map((e=>register(e)))}async function load(e){const t=e instanceof Element?e.tagName.toLowerCase():"",o=[...e.querySelectorAll(":not(:defined)")].map((e=>e.tagName.toLowerCase()));t.includes("-")&&!customElements.get(t)&&o.push(t);const n=[...new Set(o)];await Promise.allSettled(n.map((e=>register(e))))}function register(e){if(console.log("register",e),customElements.get(e))return cleanUp(t,e),Promise.resolve();const t=components[e];return t?new Promise(((o,n)=>{import(t.importPath).then((()=>{cleanUp(t,e),o()})).catch((()=>{console.error(`Unable to load <${e}> from ${t.importPath}`),n()}))})):Promise.resolve()}function cleanUp(e,t){delete components[t],e.dependencies?.forEach((e=>{delete components[e]})),Object.keys(e).length||observer.disconnect()}async function start(e=document.body){await Promise.allSettled(eagerLoad.map((e=>register(e)))),observer=new MutationObserver((e=>{for(const{addedNodes:t}of e)for(const e of t)e.nodeType===Node.ELEMENT_NODE&&load(e)})),load(e),observer.observe(e,{subtree:!0,childList:!0})}start();